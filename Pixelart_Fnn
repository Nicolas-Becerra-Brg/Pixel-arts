package pixel_art;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;

public class PixelArt {
	
	// Definimos el tamaÃ±o de la imagen en ancho y alto
	private static int width = 800;
    private static int height = 800;
    
    // Definimos el tamaÃƒÂ±o del pixel
    private static int PIXEL_SIZE = 40;
    private static Graphics2D g;
    
    // Definimos los colores a usar
    static Color white 		= Color.white;
    static Color blue  		= Color.blue;
    static Color red   		= Color.red;
    static Color black      = Color.black;
    static Color gray 		= Color.gray;
    static Color yellow 	= Color.yellow;
    static Color green		= Color.green;
    
    static Color softGreen 	= new Color(95,186,64);
    static Color skin 	= new Color(237,204,172);
    static Color darkBlue = new Color(36,83,175);
    static Color lightBlue = new Color(71,164,225);
    
    static BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
    
    // Definimos la matriz de colores    
    private final static Color[][] PIXELS = {
        {white, white, 	white, 	white, 	white},
        {white, blue, 	blue, 	blue, 	white},
        {white, blue,	red,	blue, 	white},
        {white, blue, 	blue, 	blue, 	white},
        {white, white, 	white, 	white, 	white}
    };
    
    public static void paint() {
    	
    	//Forma sin color
    	drawBackground(PIXEL_SIZE, Color.white); 
    	
    	drawHorizontalLine(4, 5, 2, black);
    	drawHorizontalLine(13, 14, 2, black);
    	fillRect(3, 3, 13, 14, Color.black);
    	drawHorizontalLine(4, 6, 17, black);
    	drawHorizontalLine(12, 14, 17, black);
    	fillRect(2, 10, 15, 4, Color.black);
    	
    	drawHorizontalLine(4, 5, 3,white );
    	drawHorizontalLine(13, 14, 3, white);
    	fillRect(4, 4, 11, 7, Color.white);
    	fillRect(4, 11, 11, 4, lightBlue);
    	
    	drawHorizontalLine(4, 14, 15,darkBlue );
    	drawHorizontalLine(4, 6, 16,darkBlue);
    	drawHorizontalLine(12, 14, 16,darkBlue );
    	
    	drawHorizontalLine(3, 4, 10,softGreen);
    	drawVerticalLine(11,12,4,softGreen);
    	drawHorizontalLine(14, 15, 10,softGreen);
    	drawVerticalLine(11,12,14,softGreen);
    	
    	drawVerticalLine(11,13,3,skin);
    	drawVerticalLine(11,13,15,skin);
    	fillRect(6, 5, 7, 5, skin);
    	fillRect(5, 6, 9, 3, skin);
    	
    	drawHorizontalLine(8, 10, 8,black);
    	putPixel(6,7,black);
    	putPixel(12,7,black);
    	
    	
        //poniendo Color
        //putPixel(11,1,darkGreen);
        //drawHorizontalLine(8, 9, 3, redMelon);
        //fillRect(10, 15, 4, 2, Color.black);
        // drawVerticalLine(3,16,5,darkOrange);
        
       
        
        drawSquareGrid(PIXEL_SIZE, Color.black);
        
        // Guardamos la imagen en formato JPG
        try {       
            ImageIO.write(image, "jpg", new File("pixel_art.jpg"));
            System.out.println("EXITO !!!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private static void drawVerticalLine(int a, int b, int x, Color c){
   	    g.setColor(c);
    	for(int i=a;i<=b;i++){
    		 putPixel(x, i, c);
        }
    }
    
    private static void drawHorizontalLine(int a, int b, int y, Color c){
    	g.setColor(c);
        for(int i=a;i<=b;i++){
        	 putPixel(i, y, c);
        }
    }
    
    private static void putPixel(int x, int y, Color c){       
	   g.setColor(c);
	   g.fillRect(x * PIXEL_SIZE, y * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);    
    }
    
    private static void fillRect(int x, int y, int width, int height, Color c){
    	g.setColor(c);
    	g.fillRect(x * PIXEL_SIZE, y * PIXEL_SIZE, width*PIXEL_SIZE, height*PIXEL_SIZE);
    }
    
    private static void drawSquareGrid(int size, Color c) {
    	g.setColor(c);
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) { 
                g.drawRect(i * PIXEL_SIZE, j * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
            }
        }
    }
    private static void drawBackground(int size, Color c) {
    	g.setColor(c);
    	for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                g.fillRect(i * PIXEL_SIZE, j * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);                
            }
        }
    }    
    
    public static void main(String[] args) {
        g = image.createGraphics();        
        paint();
    }
}
