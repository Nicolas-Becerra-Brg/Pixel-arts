package pixel_art;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;

public class PixelArt {
	
	// Definimos el tamaÃ±o de la imagen en ancho y alto
	private static int width = 800;
    private static int height = 800;
    
    // Definimos el tamaÃƒÂ±o del pixel
    private static int PIXEL_SIZE = 40;
    private static Graphics2D g;
    
    // Definimos los colores a usar
    static Color white 		= Color.white;
    static Color blue  		= Color.blue;
    static Color red   		= Color.red;
    static Color black      = Color.black;
    static Color gray = Color.gray;
    static Color darkGreen 	= new Color(11,142,54);
    static Color softGreen 	= new Color(148,193,31);
    static Color redMelon = new Color(248,53,38);
    static Color darkRed = new Color(238,72,42);
    
    static BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
    
    // Definimos la matriz de colores    
    private final static Color[][] PIXELS = {
        {white, white, 	white, 	white, 	white},
        {white, blue, 	blue, 	blue, 	white},
        {white, blue,	red,	blue, 	white},
        {white, blue, 	blue, 	blue, 	white},
        {white, white, 	white, 	white, 	white}
    };
    
    public static void paint() {
    	
    	//Forma sin color
    	drawBackground(PIXEL_SIZE, Color.white);     
        
    	//redMelon la sombra (oscuro)
    	
        fillRect(9, 2, 2, 16, Color.black);
        fillRect(8, 3, 4, 15, Color.black);
        fillRect(7, 4, 6, 14, Color.black);
        fillRect(6, 5, 8, 8, Color.black);
        fillRect(2, 6, 16, 4, Color.black);
        fillRect(3, 4, 3, 2, Color.black);
        fillRect(14, 4, 3, 2, Color.black);
        putPixel(4,3,black);
        putPixel(15,3,black);
        fillRect(4, 10, 12, 2, Color.black);
        drawHorizontalLine(3, 16, 10, black);
        fillRect(2, 16, 16, 2, Color.black);
        drawHorizontalLine(3, 16, 15, black);
        drawHorizontalLine(4, 6, 14, black);
        drawHorizontalLine(13, 15, 14, black);
        drawHorizontalLine(5, 14, 12, black);
        putPixel(7,14,white);
        
        fillRect(3, 16, 5, 2, softGreen);
        fillRect(11, 16, 5, 2, softGreen);
        fillRect(4, 15, 3, 2, softGreen);
        fillRect(12, 15, 3, 2, softGreen);
        fillRect(9, 14, 2, 2, softGreen);
        putPixel(9,16,softGreen);
        
        fillRect(3, 6, 14, 4, darkRed);
        drawHorizontalLine(4, 15, 10, darkRed);
        drawHorizontalLine(5, 14, 11, darkRed);
        drawHorizontalLine(7, 12, 12, darkRed);
        drawHorizontalLine(4, 5, 5, darkRed);
        drawHorizontalLine(14, 15, 5, darkRed);
        putPixel(4,4,darkRed);
        putPixel(15,4,darkRed);
        drawHorizontalLine(7, 12, 5, darkRed);
        drawHorizontalLine(8, 11, 4, darkRed);
        drawHorizontalLine(9, 10, 3, darkRed);
        
        drawHorizontalLine(6, 7, 7, black);
        drawHorizontalLine(12, 13, 7, black);
        putPixel(5,8,black);
        putPixel(8,8,black);
        putPixel(11,8,black);
        putPixel(14,8,black);
        
        
        //poniendo Color
        //putPixel(11,1,darkGreen);
        //drawHorizontalLine(8, 9, 3, redMelon);
        //fillRect(10, 15, 4, 2, Color.black);
        // drawVerticalLine(3,16,5,darkOrange);
        
       
        
        drawSquareGrid(PIXEL_SIZE, Color.black);
        
        // Guardamos la imagen en formato JPG
        try {       
            ImageIO.write(image, "jpg", new File("pixel_art.jpg"));
            System.out.println("EXITO !!!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private static void drawVerticalLine(int a, int b, int x, Color c){
   	    g.setColor(c);
    	for(int i=a;i<=b;i++){
    		 putPixel(x, i, c);
        }
    }
    
    private static void drawHorizontalLine(int a, int b, int y, Color c){
    	g.setColor(c);
        for(int i=a;i<=b;i++){
        	 putPixel(i, y, c);
        }
    }
    
    private static void putPixel(int x, int y, Color c){       
	   g.setColor(c);
	   g.fillRect(x * PIXEL_SIZE, y * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);    
    }
    
    private static void fillRect(int x, int y, int width, int height, Color c){
    	g.setColor(c);
    	g.fillRect(x * PIXEL_SIZE, y * PIXEL_SIZE, width*PIXEL_SIZE, height*PIXEL_SIZE);
    }
    
    private static void drawSquareGrid(int size, Color c) {
    	g.setColor(c);
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) { 
                g.drawRect(i * PIXEL_SIZE, j * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
            }
        }
    }
    private static void drawBackground(int size, Color c) {
    	g.setColor(c);
    	for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                g.fillRect(i * PIXEL_SIZE, j * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);                
            }
        }
    }    
    
    public static void main(String[] args) {
        g = image.createGraphics();        
        paint();
    }
}
